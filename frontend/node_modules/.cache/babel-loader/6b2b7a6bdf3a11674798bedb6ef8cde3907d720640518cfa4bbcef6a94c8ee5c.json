{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\Documents\\\\DUT\\\\TD_TP_SAE\\\\S3\\\\SAEphoto\\\\frontend\\\\src\\\\Component\\\\PagedeConnexion\\\\Connexion.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Connexion.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Connexion = ({\n  setPage,\n  setIsConnected,\n  isConnected\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = e => {\n    e.preventDefault();\n    console.log('Connexion en cours...');\n    axios.get(`http://localhost:5000/GET/connexion?mail=${encodeURIComponent(email)}&mdp=${encodeURIComponent(password)}`).then(response => {\n      console.log('Success:', response.data);\n      const token = response.data;\n      if (token) {\n        localStorage.setItem('authToken', token);\n        console.log('Token:', token);\n        axios.get('http://localhost:5000/GET/verify-token', {\n          params: {\n            token: token\n          }\n        }).then(verifyResponse => {\n          console.log('reponse:', verifyResponse.data);\n          if (verifyResponse.data.message === 'Token is valid') {\n            setIsConnected(true);\n            console.log('isConnected:', isConnected);\n            setPage(1);\n          } else {\n            setIsConnected(false);\n          }\n        }).catch(error => {\n          console.error('Erreur lors de la vérification du token :', error);\n        });\n      } else {\n        console.error('Le token est vide ou non valide');\n      }\n    }).catch(error => {\n      if (error.response && error.response.status === 401) {\n        console.error('Mot de passe incorrect');\n      } else {\n        console.error('Erreur lors de la requête :', error);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connexion-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"connexion-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Adresse e-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"connexion-button\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Connexion, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Connexion;\nexport default Connexion;\nvar _c;\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Connexion","setPage","setIsConnected","isConnected","_s","email","setEmail","password","setPassword","handleLogin","e","preventDefault","console","log","get","encodeURIComponent","then","response","data","token","localStorage","setItem","params","verifyResponse","message","catch","error","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/renzo/Documents/DUT/TD_TP_SAE/S3/SAEphoto/frontend/src/Component/PagedeConnexion/Connexion.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Connexion.css';\r\nimport axios from 'axios';\r\n\r\ninterface ConnexionProps {\r\n  setPage: (page: number) => void;\r\n  setIsConnected: (isConnected: boolean) => void;\r\n  isConnected: boolean;\r\n}\r\n\r\nconst Connexion: React.FC<ConnexionProps> = ({ setPage, setIsConnected, isConnected }) => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log('Connexion en cours...');\r\n  \r\n    axios\r\n      .get(\r\n        `http://localhost:5000/GET/connexion?mail=${encodeURIComponent(\r\n          email,\r\n        )}&mdp=${encodeURIComponent(password)}`\r\n      )\r\n      .then((response) => {\r\n        console.log('Success:', response.data);\r\n        const token = response.data;\r\n        if (token) {\r\n          localStorage.setItem('authToken', token);\r\n          console.log('Token:', token);\r\n          axios.get('http://localhost:5000/GET/verify-token', {\r\n            params: { token: token }\r\n          })\r\n          .then((verifyResponse) => {\r\n            console.log('reponse:', verifyResponse.data);\r\n            if (verifyResponse.data.message === 'Token is valid') {\r\n              setIsConnected(true);\r\n              console.log('isConnected:', isConnected);\r\n              setPage(1);\r\n            } else {\r\n              setIsConnected(false);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('Erreur lors de la vérification du token :', error);\r\n          });\r\n        } else {\r\n          console.error('Le token est vide ou non valide');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.status === 401) {\r\n          console.error('Mot de passe incorrect');\r\n        } else {\r\n          console.error('Erreur lors de la requête :', error);\r\n        }\r\n      });\r\n  }\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"connexion-container\">\r\n      <h2>Connexion</h2>\r\n      <form onSubmit={handleLogin} className=\"connexion-form\">\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"email\">Adresse e-mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            className=\"input-field\"\r\n          />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"password\">Mot de passe</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            className=\"input-field\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"connexion-button\">Connexion</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Connexion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}