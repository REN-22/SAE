{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\Documents\\\\DUT\\\\TD_TP_SAE\\\\S3\\\\SAEphoto\\\\frontend\\\\src\\\\Component\\\\Filphoto\\\\commentaire.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst commentaire = [{\n  id: 1,\n  author: 'John Doe',\n  content: 'This is a test comment.',\n  date: '2023-10-01'\n}, {\n  id: 2,\n  author: 'Jane Smith',\n  content: 'Another test comment.',\n  date: '2023-10-02'\n}, {\n  id: 3,\n  author: 'Alice Johnson',\n  content: 'Yet another test comment.',\n  date: '2023-10-03'\n}];\nconst Commentaire = ({\n  id\n}) => {\n  {}\n\n  // useEffect(() => {\n  //     // Replace with your actual API endpoint\n  //     fetch(`/api/comments/${id}`)\n  //         .then(response => response.json())\n  //         .then(data => setComments(data))\n  //         .catch(error => console.error('Error fetching comments:', error));\n  // }, [id]);\n\n  if (comments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentaire\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: index,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: comment.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: comment.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = Commentaire;\nexport default Commentaire;\nvar _c;\n$RefreshReg$(_c, \"Commentaire\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","commentaire","id","author","content","date","Commentaire","comments","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","comment","_c","$RefreshReg$"],"sources":["C:/Users/renzo/Documents/DUT/TD_TP_SAE/S3/SAEphoto/frontend/src/Component/Filphoto/commentaire.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface CommentaireProps {\r\n    id: number;\r\n}\r\n\r\ninterface CommentData {\r\n    author: string;\r\n    content: string;\r\n    date: string;\r\n}\r\n\r\nconst commentaire = [\r\n    { id: 1, author: 'John Doe', content: 'This is a test comment.', date: '2023-10-01'},\r\n    { id: 2, author: 'Jane Smith', content: 'Another test comment.', date: '2023-10-02'},\r\n    { id: 3, author: 'Alice Johnson', content: 'Yet another test comment.', date: '2023-10-03'},\r\n];\r\n\r\nconst Commentaire: React.FC<CommentaireProps> = ({ id }) => {\r\n        {\r\n            \r\n            \r\n            \r\n        }\r\n\r\n    // useEffect(() => {\r\n    //     // Replace with your actual API endpoint\r\n    //     fetch(`/api/comments/${id}`)\r\n    //         .then(response => response.json())\r\n    //         .then(data => setComments(data))\r\n    //         .catch(error => console.error('Error fetching comments:', error));\r\n    // }, [id]);\r\n\r\n    if (comments.length === 0) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"commentaire\">\r\n            <div id={index}>\r\n                <h4>{comment.author}</h4>\r\n                <p>{comment.content}</p>\r\n                <small>{comment.date}</small>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Commentaire;"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYnD,MAAMC,WAAW,GAAG,CAChB;EAAEC,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,UAAU;EAAEC,OAAO,EAAE,yBAAyB;EAAEC,IAAI,EAAE;AAAY,CAAC,EACpF;EAAEH,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,YAAY;EAAEC,OAAO,EAAE,uBAAuB;EAAEC,IAAI,EAAE;AAAY,CAAC,EACpF;EAAEH,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,eAAe;EAAEC,OAAO,EAAE,2BAA2B;EAAEC,IAAI,EAAE;AAAY,CAAC,CAC9F;AAED,MAAMC,WAAuC,GAAGA,CAAC;EAAEJ;AAAG,CAAC,KAAK;EACpD,CAIA;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIK,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAOR,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIb,OAAA;IAAKc,SAAS,EAAC,aAAa;IAAAL,QAAA,eACxBT,OAAA;MAAKE,EAAE,EAAEa,KAAM;MAAAN,QAAA,gBACXT,OAAA;QAAAS,QAAA,EAAKO,OAAO,CAACb;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBb,OAAA;QAAAS,QAAA,EAAIO,OAAO,CAACZ;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBb,OAAA;QAAAS,QAAA,EAAQO,OAAO,CAACX;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACI,EAAA,GA5BIX,WAAuC;AA8B7C,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}