{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\Documents\\\\DUT\\\\TD_TP_SAE\\\\S3\\\\SAEphoto\\\\frontend\\\\src\\\\Component\\\\Filphoto\\\\commentaire.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Commentaire = ({\n  id\n}) => {\n  _s();\n  const [comments, setComments] = useState([{\n    author: 'John Doe',\n    content: 'This is a test comment.',\n    date: '2023-10-01'\n  }, {\n    author: 'Jane Smith',\n    content: 'Another test comment.',\n    date: '2023-10-02'\n  }, {\n    author: 'Alice Johnson',\n    content: 'Yet another test comment.',\n    date: '2023-10-03'\n  }]);\n\n  // useEffect(() => {\n  //     // Replace with your actual API endpoint\n  //     fetch(`/api/comments/${id}`)\n  //         .then(response => response.json())\n  //         .then(data => setComments(data))\n  //         .catch(error => console.error('Error fetching comments:', error));\n  // }, [id]);\n\n  if (comments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentaire\",\n    children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: comment.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: comment.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Commentaire, \"Xu7O6J/Pq6X9+UvXeKITGwBYrik=\");\n_c = Commentaire;\nexport default Commentaire;\nvar _c;\n$RefreshReg$(_c, \"Commentaire\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Commentaire","id","_s","comments","setComments","author","content","date","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","comment","index","_c","$RefreshReg$"],"sources":["C:/Users/renzo/Documents/DUT/TD_TP_SAE/S3/SAEphoto/frontend/src/Component/Filphoto/commentaire.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface CommentaireProps {\r\n    id: number;\r\n}\r\n\r\ninterface CommentData {\r\n    author: string;\r\n    content: string;\r\n    date: string;\r\n}\r\n\r\nconst Commentaire: React.FC<CommentaireProps> = ({ id }) => {\r\n    const [comments, setComments] = useState<CommentData[]>([\r\n        {\r\n            author: 'John Doe',\r\n            content: 'This is a test comment.',\r\n            date: '2023-10-01'\r\n        },\r\n        {\r\n            author: 'Jane Smith',\r\n            content: 'Another test comment.',\r\n            date: '2023-10-02'\r\n        },\r\n        {\r\n            author: 'Alice Johnson',\r\n            content: 'Yet another test comment.',\r\n            date: '2023-10-03'\r\n        }\r\n    ]);\r\n\r\n    // useEffect(() => {\r\n    //     // Replace with your actual API endpoint\r\n    //     fetch(`/api/comments/${id}`)\r\n    //         .then(response => response.json())\r\n    //         .then(data => setComments(data))\r\n    //         .catch(error => console.error('Error fetching comments:', error));\r\n    // }, [id]);\r\n\r\n    if (comments.length === 0) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"commentaire\">\r\n            {comments.map((comment, index) => (\r\n                <div key={index}>\r\n                    <h4>{comment.author}</h4>\r\n                    <p>{comment.content}</p>\r\n                    <small>{comment.date}</small>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Commentaire;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYnD,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAgB,CACpD;IACIQ,MAAM,EAAE,UAAU;IAClBC,OAAO,EAAE,yBAAyB;IAClCC,IAAI,EAAE;EACV,CAAC,EACD;IACIF,MAAM,EAAE,YAAY;IACpBC,OAAO,EAAE,uBAAuB;IAChCC,IAAI,EAAE;EACV,CAAC,EACD;IACIF,MAAM,EAAE,eAAe;IACvBC,OAAO,EAAE,2BAA2B;IACpCC,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIJ,QAAQ,CAACK,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAOT,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACId,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAL,QAAA,EACvBN,QAAQ,CAACY,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBlB,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAKO,OAAO,CAACX;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBd,OAAA;QAAAU,QAAA,EAAIO,OAAO,CAACV;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBd,OAAA;QAAAU,QAAA,EAAQO,OAAO,CAACT;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHvBI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACX,EAAA,CA1CIF,WAAuC;AAAAkB,EAAA,GAAvClB,WAAuC;AA4C7C,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}