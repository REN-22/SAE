{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\Documents\\\\DUT\\\\TD_TP_SAE\\\\S3\\\\SAEphoto\\\\frontend\\\\src\\\\Component\\\\uploadphoto\\\\uploadphoto.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './uploadphoto.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Uploadphoto = ({\n  setPage\n}) => {\n  _s();\n  const [isPublic, setIsPublic] = useState(false);\n  const [nomphoto, setNomphoto] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [photographe, setPhotographe] = useState(\"\");\n  const upload = async () => {\n    var _files, _files2;\n    console.log(\"upload\");\n    const token = localStorage.getItem('phototoken');\n    try {\n      const response = await axios.get('http://localhost:5000/GET/verify-token', {\n        params: {\n          token: token\n        }\n      });\n      if (response.data.valid === false) {\n        setPage(5);\n      }\n    } catch {\n      console.log(\"token invalide\");\n    }\n    const formData = new FormData();\n    const photo = (_files = document.querySelector('input[type=\"file\"][accept=\"image/*\"]').files) === null || _files === void 0 ? void 0 : _files[0];\n    const exif = (_files2 = document.querySelector('input[type=\"file\"][accept=\".exif\"]').files) === null || _files2 === void 0 ? void 0 : _files2[0];\n    if (photo) formData.append('photo', photo);\n    if (exif) formData.append('exif', exif);\n    formData.append('info', JSON.stringify({\n      nom: nomphoto,\n      nomphoto: nomphoto,\n      description: description,\n      isPublic: isPublic,\n      photographe: photographe\n    }));\n    formData.append('token', token || '');\n    try {\n      const response = await axios.post('http://localhost:5000/POST/upload-photo', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error uploading photo:', error);\n    }\n  };\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const token = localStorage.getItem('phototoken');\n      try {\n        const response = await axios.get('http://localhost:5000/GET/users', {\n          params: {\n            token: token\n          }\n        });\n        setUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadphoto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Uploadphoto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"photo\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => {\n        var _e$target$files;\n        const photo = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n        if (photo) {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            console.log(reader.result);\n          };\n          reader.readAsDataURL(photo);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"exif\",\n      type: \"file\",\n      accept: \".exif\",\n      onChange: e => {\n        var _e$target$files2;\n        const exif = (_e$target$files2 = e.target.files) === null || _e$target$files2 === void 0 ? void 0 : _e$target$files2[0];\n        if (exif) {\n          const reader = new FileReader();\n          reader.onloadend = () => {\n            console.log(reader.result);\n          };\n          reader.readAsDataURL(exif);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom de la photo\",\n      value: nomphoto,\n      onChange: e => setNomphoto(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Photographe\",\n      value: photographe,\n      onChange: e => setPhotographe(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUser,\n      onChange: e => setSelectedUser(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select a user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user.id_utilisateur,\n        children: user.nom\n      }, user.id_utilisateur, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isPublic,\n      onChange: e => setIsPublic(e.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), \" Public\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: upload,\n      children: \"valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Uploadphoto, \"/xAWyyprQak31Cc/wXDpBIofQow=\");\n_c = Uploadphoto;\nexport default Uploadphoto;\nvar _c;\n$RefreshReg$(_c, \"Uploadphoto\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Uploadphoto","setPage","_s","isPublic","setIsPublic","nomphoto","setNomphoto","description","setDescription","photographe","setPhotographe","upload","_files","_files2","console","log","token","localStorage","getItem","response","get","params","data","valid","formData","FormData","photo","document","querySelector","files","exif","append","JSON","stringify","nom","post","headers","error","users","setUsers","selectedUser","setSelectedUser","fetchUsers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","accept","onChange","e","_e$target$files","target","reader","FileReader","onloadend","result","readAsDataURL","_e$target$files2","value","disabled","map","user","id_utilisateur","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/renzo/Documents/DUT/TD_TP_SAE/S3/SAEphoto/frontend/src/Component/uploadphoto/uploadphoto.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport './uploadphoto.css';\r\nimport { upload } from '@testing-library/user-event/dist/upload';\r\nimport axios from 'axios';\r\n\r\ninterface uploadphotoProps {\r\n    setPage: any;\r\n}\r\n\r\nconst Uploadphoto: React.FC<uploadphotoProps> = ({ setPage }) => {\r\n    const [isPublic, setIsPublic] = useState<boolean>(false);\r\n    const [nomphoto, setNomphoto] = useState<string>(\"\");\r\n    const [description, setDescription] = useState<string>(\"\");\r\n    const [photographe, setPhotographe] = useState<string>(\"\");\r\n\r\n    const upload = async () => {\r\n        console.log(\"upload\");\r\n        const token = localStorage.getItem('phototoken');\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/GET/verify-token', {\r\n              params: {\r\n                token: token\r\n              }\r\n            });\r\n            if (response.data.valid === false) {\r\n                setPage(5);\r\n            }\r\n        } catch {\r\n            console.log(\"token invalide\");\r\n        }\r\n        \r\n        const formData = new FormData();\r\n        const photo = (document.querySelector('input[type=\"file\"][accept=\"image/*\"]') as HTMLInputElement).files?.[0];\r\n        const exif = (document.querySelector('input[type=\"file\"][accept=\".exif\"]') as HTMLInputElement).files?.[0];\r\n\r\n        if (photo) formData.append('photo', photo);\r\n        if (exif) formData.append('exif', exif);\r\n\r\n        formData.append('info', JSON.stringify({\r\n            nom: nomphoto,\r\n            nomphoto: nomphoto,\r\n            description: description,\r\n            isPublic: isPublic,\r\n            photographe: photographe\r\n        }));\r\n        formData.append('token', token || '');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/POST/upload-photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n            });\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            console.error('Error uploading photo:', error);\r\n        }\r\n\r\n    };\r\n                const [users, setUsers] = useState<any[]>([]);\r\n                const [selectedUser, setSelectedUser] = useState<string>(\"\");\r\n\r\n                useEffect(() => {\r\n                    const fetchUsers = async () => {\r\n                        const token = localStorage.getItem('phototoken');\r\n                        try {\r\n                            const response = await axios.get('http://localhost:5000/GET/users', {\r\n                                params: { token: token }\r\n                            });\r\n                            setUsers(response.data);\r\n                        } catch (error) {\r\n                            console.error('Error fetching users:', error);\r\n                        }\r\n                    };\r\n\r\n                    fetchUsers();\r\n                }, []);\r\n    \r\n    return (\r\n        <div className='uploadphoto'>\r\n            <h1>Uploadphoto</h1>\r\n            <input placeholder='photo' type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                const photo = e.target.files?.[0];\r\n                if (photo) {\r\n                    const reader = new FileReader();\r\n                    reader.onloadend = () => {\r\n                        console.log(reader.result);\r\n                    };\r\n                    reader.readAsDataURL(photo);\r\n                }}} />\r\n                <input placeholder='exif' type=\"file\" accept=\".exif\" onChange={(e) => {\r\n                    const exif = e.target.files?.[0];\r\n                    if (exif) {\r\n                        const reader = new FileReader();\r\n                        reader.onloadend = () => {\r\n                            console.log(reader.result);\r\n                        };\r\n                        reader.readAsDataURL(exif);\r\n                    }\r\n                }} />\r\n                <input type=\"text\" placeholder=\"Nom de la photo\" value={nomphoto} onChange={(e) => setNomphoto(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"Photographe\" value={photographe} onChange={(e) => setPhotographe(e.target.value)} />\r\n                    <select value={selectedUser} onChange={(e) => setSelectedUser(e.target.value)}>\r\n                        <option value=\"\" disabled>Select a user</option>\r\n                        {users.map(user => (\r\n                            <option key={user.id_utilisateur} value={user.id_utilisateur}>\r\n                                {user.nom}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                <textarea placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                <input type=\"checkbox\" checked={isPublic} onChange={(e) => setIsPublic(e.target.checked)} /> Public\r\n            <button onClick={upload}>valider</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Uploadphoto;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}